trigger:

- main
- devops

pool:
  vmImage: ubuntu-latest
  #name: my-ubuntu

variables:
  major: '1'
  minor: '0'
  revision: $[counter(variables['minor'], 1)] # This will get reset every time minor gets bumped.
  branchName: $[replace(variables['Build.SourceBranch'], 'refs/heads/', '')]
  nugetVersion: '$(branchName)_$(major).$(minor).$(revision)'
  buildConfiguration: 'Release'

stages:
- stage: BuildAndPackage
  jobs:
  - job: BuildAndPackageJob
    displayName: 'Build and Package'
    steps:
    
    - checkout: self #needed for sonarcloud
      fetchDepth: 0

    - task: SonarCloudPrepare@2
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/devops')
      inputs:
        SonarCloud: 'sonarcloud'
        organization: 'maximilianchp2024'
        scannerMode: 'CLI'
        projectKey: 'maximilianchp_Dot-Net-Hello-World'
        projectName: 'Dot Net Hello World'
        configMode: 'file'

    - script: |
        rm -rf $(Build.ArtifactStagingDirectory)/*
      displayName: 'Clean build directory'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: 'build'
        arguments: '--configuration $(buildConfiguration)'
        projects: '**/*.csproj'

    - task: UniversalPackages@0
      inputs:
       command: 'publish'
       publishDirectory: '$(Build.ArtifactStagingDirectory)'
       feedsToUsePublish: 'internal'
       vstsFeedPublish: '6686e02d-1277-4c75-9a7a-50a9dc5e0d1a/87b0cdd8-0adc-413d-80d3-99fda95d5c7c'
       vstsFeedPackagePublish: 'helloworld-artifacts'
       versionOption: 'patch'

    - task: DotNetCoreCLI@2
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/devops')
      displayName: "dotnet pack"
      inputs:
        command: 'pack'
        configuration: $(BuildConfiguration)
        packagesToPack: '**/*.csproj'
        packDirectory: '$(Build.ArtifactStagingDirectory)'
        versionEnvVar: 'nugetVersion'
        versioningScheme: 'byEnvVar'
        nobuild: true

    - task: NuGetAuthenticate@1
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/devops')
      displayName: 'NuGet Authenticate'

    - task: NuGetCommand@2
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/devops')
      displayName: 'nuget push'
      inputs:
        command: 'push'
        feedsToUse: 'select'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: 'Dot Net Hello World/my-artifacts'
        vstsFeed: 'Dot Net Hello World/my-artifacts'
        versioningScheme: 'off'
        allowPackageConflicts: true

- stage: EchoVersion
  jobs:
  - job: EchoVersionJob
    displayName: 'Echo Version'
    steps:
    - script: |
        echo "NuGet Package Version: $(nugetVersion)"
      displayName: 'Echo NuGet Version'
